[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# Shine on Oversaturated to make it more noticable
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = "if (self.edition and self.edition.negative) or (self.ability.name == 'Antimatter' and (self.config.center.discovered or self.bypass_discovery_center)) then"
position = 'at'
match_indent = true
payload = "if (self.edition and (self.edition.negative or self.edition.cry_oversat)) or (self.ability.name == 'Antimatter' and (self.config.center.discovered or self.bypass_discovery_center)) then"

# Empowered Tag
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''card = create_card("Spectral", G.pack_cards, nil, nil, true, true, nil, 'spe')'''
position = 'at'
match_indent = true
payload = '''
card = nil --this line allows Steamodded's Pack API patch to work
if self.from_empowered then
    if i == 1 then
        card = create_card("Spectral", G.pack_cards, nil, nil, true, true, 'c_soul', 'spe')
    else
        card = create_card("Spectral", G.pack_cards, nil, nil, true, true, G.P_CENTERS.c_cry_gateway and 'c_cry_gateway' or 'c_soul', 'spe')
    end
else
    card = create_card("Spectral", G.pack_cards, nil, nil, true, true, nil, 'spe')
end
'''

# Banana Tag
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''if self.ability.rental then badges[#badges + 1] = 'rental' end'''
position = 'after'
match_indent = true
payload = '''
if self.ability.banana then badges[#badges + 1] = 'banana' end
'''

# Banana Tag
[[patches]]
[patches.pattern]
target = 'functions/common_events.lua'
pattern = '''if v == 'rental' then info_queue[#info_queue+1] = {key = 'rental', set = 'Other', vars = {G.GAME.rental_rate or 1}} end'''
position = 'after'
match_indent = true
payload = '''
if v == 'banana' then info_queue[#info_queue+1] = {key = 'banana', set = 'Other', vars = {G.GAME.probabilities.normal or 1, 10}} end
'''

[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''pinned_left = G.C.ORANGE,'''
position = 'after'
payload = '''banana = HEX("e8c500"),'''
match_indent = true
